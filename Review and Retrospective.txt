The first week was extremely hectic for the group members. Many team members had numerous midterms and 
work-intensive assignments due that week. This diverted attention from the project. However, this meant
that not enough work was done on the first week. Therefore, we had to move all the work to the second week.
This led to the Front-end and Back-end classes not being completed the first week and thus severely grew
the backlog for week 2.
On the second week, some members had midterms and assignments due. This was far less a factor, however, and
the front end was mostly completed mid-week. However, the back end was a much larger task than expected, and required
the front-end cell to divert and work on the back end instead, so that the back-end front-end integration could
be done. The back-end task of making a BlueTooth Controller class had to be broken down by each of its methods.
Furthermore, a decision was made not to implement the username for the message class, because we found that for
a basic functional product, this did not need to be added. However, this will most likely be added in phase 3.

Things we could have improved:
1) The first week had very little done due to a lack of focus. It would have helped if every member could contribute
more to the group work particularly in this period. This would reduce workload on the second week and make it easier
to implement more features as less long periods of coding would be required.
In particular, the scrum master should have prompted members to work on the assignment, though the other members
should have worked more too.
2) The level of detail in our meetings could be improved. In our initial meeting, we discussed front end and back end,
but no planning tools were used (i.e. CRC cards), so it was up to the front end and back end cells to decide what methods
to implement, what they needed to do, and how to design them such that integration is as simple as calling a few methods.
We also didn't assign individual tasks, leading to chat program based lower-level coordination.
3) We should have put a larger prediction on the back end. Since we agreed that the back end is the more code-intensive
section, we ended up diverting a member mid-week to work pm the back end instead of the front end. This caused
organizational problems, as the tasks were split up for three people for front end and three people for back end.

Things we should repeat:
1) Electronic meetings:
Though they lack the literal on-the-spot value of a face to face meeting where the person speaking must stand up,
a similar effect was achieved by having everyone shut off their microphones with the exception of the person speaking.
Though we could not draw on a sheet of paper to show diagrams/UI for our design ideas, screenshots of UI as well as pictures
of drawings sent over the internet were just as effective at showing pictures.
The ability to actually communicate live despite the fact that we were separated a few hours' travel from each other when
we were able to talk together meant that meetings were able to happen consisting of all members, and we felt that
the ability to meet at a time and location more convenient for all members far outweighed the on-the-spot atmosphere
created by a face-to-face meeting.
2) Assigning optional tasks in a sprint:
As the time required by tasks is extremely unpredictable, this gives those who finish unexpectedly early an important
feature to implement. This reduces the future backlog as well as ensure that people are not left with no tasks to complete
because of an incorrect prediction about the time required to complete a certain goal in a sprint.